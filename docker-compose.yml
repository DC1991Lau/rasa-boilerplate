version: "3.0"

services:
  rasa:
    image: rasa/rasa:latest-full
    user: "root"
    networks: ["rasa-network"]
    volumes:
      - "./app/rasa:/app/"
    command: >
      run 
      --endpoints endpoints.yml
      -m models
      --enable-api
      --cors "*"
      --debug
    depends_on:
      - mongo1
      - mongo2
      - mongo3

  action_server:
    image: rasa/rasa-sdk:latest
    networks: ["rasa-network"]
    volumes:
      - "./app/actions:/app/actions"

  redis:
    image: redis:latest
    networks: ["rasa-network"]

  nlg:
    entrypoint: ["python"]
    image: nlg_server
    networks: ["rasa-network"]
    user: "root"
    build:
      context: ./app/nlg
    volumes:
      - ./app/domain/domain.yml:/nlg/domain.yml
    command: nlg_server.py --port 5056 --domain ./domain.yml

  api:
    networks: ["rasa-network"]
    build: ./app/api
    volumes:
      - ./app/api:/api
      - ./app/domain/domain.yml:/api/domain.yml
    depends_on:
      - mongo1
      - mongo2
      - mongo3
      - rasa

  nginx:
    networks: ["rasa-network"]
    build: ./app/nginx
    ports:
      - "8080:8080"
    depends_on:
      - rasa
      - api

  mongo1:
    image: mongo
    container_name: mongo1
    networks: ["rasa-network"]
    command:
      [
        "--replSet",
        "rasa-mongo-replica-set",
        "--bind_ip_all",
        "--port",
        "30001",
      ]
    volumes:
      - ./app/data/mongo-1:/data/db

    healthcheck:
      test: test $$(echo "rs.initiate({_id:'rasa-mongo-replica-set',members:[{_id:0,host:\"mongo1:30001\"},{_id:1,host:\"mongo2:30002\"},{_id:2,host:\"mongo3:30003\"}]}).ok || rs.status().ok" | mongo --port 30001 --quiet) -eq 1
      interval: 10s
      start_period: 30s
    environment:
      MONGO_INITDB_DATABASE: rasa

  mongo2:
    image: mongo
    container_name: mongo2
    networks: ["rasa-network"]
    command:
      [
        "--replSet",
        "rasa-mongo-replica-set",
        "--bind_ip_all",
        "--port",
        "30002",
      ]
    volumes:
      - ./app/data/mongo-2:/data/db

    environment:
      MONGO_INITDB_DATABASE: rasa

  mongo3:
    image: mongo
    container_name: mongo3
    networks: ["rasa-network"]
    command:
      [
        "--replSet",
        "rasa-mongo-replica-set",
        "--bind_ip_all",
        "--port",
        "30003",
      ]
    volumes:
      - ./app/data/mongo-3:/data/db

    environment:
      MONGO_INITDB_DATABASE: rasa

    #model_server
    #Minio

    #logging

    #Kraken

    # volumes:
    #   domain/domain.yml
    #   data/mongo

networks: { rasa-network: {} }
